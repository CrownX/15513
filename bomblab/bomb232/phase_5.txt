Dump of assembler code for function phase_5:
   0x00000000004012bd <+0>:     push   %rbx
   0x00000000004012be <+1>:     sub    $0x10,%rsp                       
   0x00000000004012c2 <+5>:     mov    %rdi,%rbx                        # $rbx = $rdi, 0x6059e0 -> *p = input str
   0x00000000004012c5 <+8>:     callq  0x401754 <string_length>
   0x00000000004012ca <+13>:    cmp    $0x6,%rax                        # $rax : 0x6
   0x00000000004012ce <+17>:    je     0x4012d5 <phase_5+24>            # =, jump
   0x00000000004012d0 <+19>:    callq  0x40197f <explode_bomb>
   0x00000000004012d5 <+24>:    mov    $0x0,%eax                        # $rax = 0x0
   0x00000000004012da <+29>:    jmp    0x4012f1 <phase_5+52>            # jump
   0x00000000004012dc <+31>:    movzbl (%rbx,%rax,1),%edx               # loop: $rdx = ($rbx + 1 * $rax)
   0x00000000004012e0 <+35>:    and    $0xf,%edx                        # $rdx = $rdx & 0xf
   0x00000000004012e3 <+38>:    movzbl 0x402b70(%rdx),%edx              # $rdx = ($rdx + 0x402b70(byte))
   0x00000000004012ea <+45>:    mov    %dl,(%rsp,%rax,1)                # ($rsp + 1 * $rax) = the lowest byte of $rdx
   0x00000000004012ed <+48>:    add    $0x1,%rax                        # $rax += 1
   0x00000000004012f1 <+52>:    cmp    $0x5,%rax                        # check $rax : 0x5
   0x00000000004012f5 <+56>:    jbe    0x4012dc <phase_5+31>            # <=, jump
   0x00000000004012f7 <+58>:    movb   $0x0,0x6(%rsp)                   # ($rsp + 0x6) = 0x0
   0x00000000004012fc <+63>:    mov    $0x604400,%esi                   # $rsi = 0x604400
---Type <return> to continue, or q <return> to quit---
   0x0000000000401301 <+68>:    mov    %rsp,%rdi                        # $rdi = $rsp
   0x0000000000401304 <+71>:    callq  0x40176a <strings_not_equal>
   0x0000000000401309 <+76>:    test   %al,%al                          # 
   0x000000000040130b <+78>:    je     0x401312 <phase_5+85>            # $al = 0, jump
   0x000000000040130d <+80>:    callq  0x40197f <explode_bomb>
   0x0000000000401312 <+85>:    add    $0x10,%rsp
   0x0000000000401316 <+89>:    pop    %rbx
   0x0000000000401317 <+90>:    retq   
End of assembler dump.